ingress:
  enabled: true
  pathType: Prefix
  path: /auth
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/proxy-buffer-size: "16k"
    nginx.ingress.kubernetes.io/affinity: "cookie"
    nginx.ingress.kubernetes.io/session-cookie-name: "identity_affinity_route"
    nginx.ingress.kubernetes.io/session-cookie-hash: "sha1"

realm:
  alfresco:
    adminPassword: admin
    client:
      # -- For security reasons, override the default value and use URIs to be as specific as possible. [See Keycloak official documentation](https://www.keycloak.org/docs/latest/securing_apps/#redirect-uris).
      redirectUris:
        - "*"
      webOrigins:
        - "http://localhost*"
        - "https://localhost*"
    extraRealmRoles:
      - name: test_role
        scopeParamRequired: true
        composite: false
        clientRole: false
        containerId: "alfresco"
    extraGroups:
      - name: testgroup
        path: "/testgroup"
        attributes: {}
        realmRoles: []
        clientRoles: {}
        subGroups: []
    extraUsers:
      - username: testuser
        enabled: true
        totp: false
        emailVerified: false
        firstName: test
        lastName: test
        email: test@test.com
        credentials:
          - type: password
            value: password
        disableableCredentialTypes:
          - password
        realmRoles:
          - uma_authorization
          - user
          - offline_access
          - test_role
        clientRoles:
          account:
            - manage-account
            - view-profile
        groups:
          - "/admin"
          - "/testgroup"

keycloakx:
  command:
    - "/opt/keycloak/bin/kc.sh"
    - "start"
    - "--import-realm"
    - "--http-relative-path=/auth"
  rbac:
    create: false
  image:
    tag: 25.0.6
  imagePullSecrets:
    - name: quay-registry-secret
  serviceAccount:
    create: true
  service:
    httpPort: 80
  extraVolumes: |
    - name: realm-secret
      secret:
        secretName: realm-secret
    - name: theme
      emptyDir: {}
  extraVolumeMounts: |
    - name: realm-secret
      mountPath: "/opt/keycloak/data/import/"
      readOnly: true
    - name: theme
      mountPath: "/opt/keycloak/themes/alfresco"
      readOnly: true
  extraEnv: |
    - name: KEYCLOAK_ADMIN
      value: admin
    - name: KEYCLOAK_ADMIN_PASSWORD
      value: admin
    - name: KEYCLOAK_IMPORT
      value: /data/import/alfresco-realm.json
    - name: JAVA_OPTS_APPEND
      value: >-
        -Djgroups.dns.query={{ include "keycloak.fullname" . }}-headless
  extraInitContainers: |
    - name: theme-provider
      image: busybox:1.36
      imagePullPolicy: IfNotPresent
      command:
        - sh
      args:
        - -c
        - |
          THEME_VERSION=0.3.5
          wget https://github.com/Alfresco/alfresco-keycloak-theme/releases/download/${THEME_VERSION}/alfresco-keycloak-theme-${THEME_VERSION}.zip -O /alfresco.zip
          unzip alfresco.zip
          mv alfresco/* /theme/
      volumeMounts:
        - name: theme
          mountPath: /theme

postgresql:
  # -- Flag introduced for testing purposes, to actually run this with postgresql follow the approach explained [here](https://github.com/codecentric/helm-charts/blob/keycloakx-2.5.1/charts/keycloakx/examples/postgresql/readme.md).
  enabled: false
