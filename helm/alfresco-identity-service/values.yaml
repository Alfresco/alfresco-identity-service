ingress:
  enabled: true
  path: /auth
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/proxy-buffer-size: "16k"
    nginx.ingress.kubernetes.io/affinity: "cookie"
    nginx.ingress.kubernetes.io/session-cookie-name: "identity_affinity_route"
    nginx.ingress.kubernetes.io/session-cookie-hash: "sha1"
ingressHostName: "your ingress dns name"

realm:
  alfresco:
    extraRealmRoles:
      - name: test_role
        scopeParamRequired: true
        composite: false
        clientRole: false
        containerId: "alfresco"
    extraGroups:
      - name: testgroup
        path: "/testgroup"
      - name: testgroup2
        path: "/testgroup2"
    extraUsers:
      - username: testuser
        enabled: true
        totp: false
        emailVerified: false
        firstName: test
        lastName: test
        email: test@test.com
        credentials:
          - type: password
            hashedSaltedValue: "+A2UrlK6T33IHVutjQj9k8S8kMco1IMnmCTngEg+PE+2vO4jJScux6wcltsRIYILv5ggcS3PI7tbsynq5u39sQ=="
            salt: "IyVlItIo27bmACSLi4yQkA=="
            hashIterations: 20000
            counter: 0
            algorithm: pbkdf2
            digits: 0
            period: 0
        disableableCredentialTypes:
          - password
        realmRoles:
          - uma_authorization
          - user
          - offline_access
          - test_role
        clientRoles:
          account:
            - manage-account
            - view-profile
        groups:
          - "/admin"
          - "/testgroup"
extraClients:
  alfresco:
    clientRoles:
      - name: test_client_role1
        scopeParamRequired: false
        composite: false
        clientRole: true
      - name: test_client_role2
        scopeParamRequired: false
        composite: false
        clientRole: true
    id: be13165d-2792-43aa-abdb-2c6cdb627184
    clientId: alfresco
    surrogateAuthRequired: false
    enabled: true
    clientAuthenticatorType: client-secret
    secret: "**********"
    redirectUris:
      - "*"
    webOrigins:
      - "*"
    notBefore: 0
    bearerOnly: false
    consentRequired: false
    standardFlowEnabled: true
    implicitFlowEnabled: true
    directAccessGrantsEnabled: true
    serviceAccountsEnabled: false
    publicClient: true
    frontchannelLogout: false
    protocol: openid-connect
    attributes: {}
    fullScopeAllowed: true
    nodeReRegistrationTimeout: -1
    protocolMappers:
      - id: 202b6b67-dea4-440b-b250-867fa7eb7333
        name: role list
        protocol: saml
        protocolMapper: saml-role-list-mapper
        consentRequired: false
        config:
          single: 'false'
          attribute.nameformat: Basic
          attribute.name: Role
      - id: cdb53973-5bf0-4de4-945d-901de3205016
        name: email
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        consentRequired: true
        consentText: "${email}"
        config:
          userinfo.token.claim: 'true'
          user.attribute: email
          id.token.claim: 'true'
          access.token.claim: 'true'
          claim.name: email
          jsonType.label: String
      - id: 8dd3c664-426e-44e7-931f-5e0700ed9e7f
        name: username
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        consentRequired: true
        consentText: "${username}"
        config:
          userinfo.token.claim: 'true'
          user.attribute: username
          id.token.claim: 'true'
          access.token.claim: 'true'
          claim.name: preferred_username
          jsonType.label: String
      - id: aa1a443c-4716-424b-b695-49961d9cf98a
        name: family name
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        consentRequired: true
        consentText: "${familyName}"
        config:
          userinfo.token.claim: 'true'
          user.attribute: lastName
          id.token.claim: 'true'
          access.token.claim: 'true'
          claim.name: family_name
          jsonType.label: String
      - id: b29201a7-e442-47f6-a589-1b6faaf27b20
        name: full name
        protocol: openid-connect
        protocolMapper: oidc-full-name-mapper
        consentRequired: true
        consentText: "${fullName}"
        config:
          id.token.claim: 'true'
          access.token.claim: 'true'
      - id: 292f1e75-3216-447d-886a-6ab91b0dee1d
        name: given name
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        consentRequired: true
        consentText: "${givenName}"
        config:
          userinfo.token.claim: 'true'
          user.attribute: firstName
          id.token.claim: 'true'
          access.token.claim: 'true'
          claim.name: given_name
          jsonType.label: String
    useTemplateConfig: false
    useTemplateScope: false
    useTemplateMappers: false
keycloak:
  rbac:
    create: false
  keycloak:
    username: admin
    password: admin
    service:
      port: 80
    extraInitContainers: |
      - name: theme-provider
        image: alfresco/alfresco-keycloak-theme:0.1
        imagePullPolicy: Always
        command:
          - sh
        args:
          - -c
          - |
            echo "Copying theme..."
            cp -R /alfresco/* /theme
        volumeMounts:
          - name: theme
            mountPath: /theme    
    extraVolumes: |
      - name: realm-secret
        secret:
          secretName: realm-secret
      - name: theme
        emptyDir: {}    
    extraVolumeMounts: |
      - name: realm-secret
        mountPath: "/realm/"
        readOnly: true
      - name: theme
        mountPath: /opt/jboss/keycloak/themes/alfresco  
    extraArgs: "-Dkeycloak.import=/realm/alfresco-realm.json"
    persistence:
      deployPostgres: true
      dbVendor: postgres
      dbPassword: keycloak
  persistence:
    deployPostgres: true
  postgresql:
    nameOverride: postgresql-id
    imageTag: "10.1"
    postgresPassword: "keycloak"
    persistence:
      enabled: true
      existingClaim: "alfresco-volume-claim"
      subPath: "alfresco-identity-service/database-data"
    resources:
      requests:
        memory: "250Mi"
      limits:
        memory: "500Mi"

