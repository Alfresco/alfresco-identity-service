apiVersion: batch/v1
kind: Job
metadata:
  name: upg-cleanup-job-{{ template "alfresco-identity.fullname" . }}
  labels:
    heritage: {{.Release.Service | quote }}
    release: {{.Release.Name | quote }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
  annotations:
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
    "helm.sh/hook": pre-upgrade #Determines time of deploy
    "helm.sh/hook-weight": "-1" #Determines the order if multiple hooks are deffined
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded,hook-failed #Determines when is the object deleted
spec:
  template:
    metadata:
      name: upg-cleanup-job-{{ template "alfresco-identity.fullname" . }}
      labels:
        heritage: {{.Release.Service | quote }}
        release: {{.Release.Name | quote }}
        chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    spec:
      restartPolicy: "OnFailure"
      containers:
        - name: upg-cleanup-job
          image: "{{ .Values.hyperkube.image.repository }}:{{ .Values.hyperkube.image.tag }}"
          imagePullPolicy: "{{ .Values.hyperkube.image.pullPolicy }}"
          command:
            - bash
            - -c
            - |
              kubectl delete --ignore-not-found sts {{ template "keycloak.fullname" . }} --cascade=false && kubectl delete --ignore-not-found secret realm-secret 

---

kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: aims-pgbackup-volume
  labels:
    heritage: {{.Release.Service | quote }}
    release: {{.Release.Name | quote }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
  annotations:
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
    "helm.sh/hook": pre-upgrade #Determines time of deploy
    "helm.sh/hook-weight": "0" #Determines the order if multiple hooks are deffined    
    "helm.sh/hook-delete-policy": before-hook-creation
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.keycloak.postgresql.persistence.size | quote }}

---

apiVersion: batch/v1
kind: Job
metadata:
  name: upg-backup-job-{{ template "alfresco-identity.fullname" . }}
  labels:
    heritage: {{.Release.Service | quote }}
    release: {{.Release.Name | quote }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
  annotations:
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
    "helm.sh/hook": pre-upgrade #Determines time of deploy
    "helm.sh/hook-weight": "1" #Determines the order if multiple hooks are deffined
    "helm.sh/hook-delete-policy": hook-succeeded #Determines when is the object deleted
spec:
  template:
    metadata:
      name: upg-backup-job-{{ template "alfresco-identity.fullname" . }}
      labels:
        heritage: {{.Release.Service | quote }}
        release: {{.Release.Name | quote }}
        chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    spec:
      restartPolicy: "OnFailure"
      containers:
        - name: upg-backup-job
          image: "postgres:10.1"
          imagePullPolicy: "IfNotPresent"
          env:
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-{{ .Values.keycloak.postgresql.nameOverride }}
                  key: postgres-password
          command:
            - bash
            - -c
            - |
              pg_dump -Fc -b -h {{ .Release.Name }}-{{ .Values.keycloak.postgresql.nameOverride }} \
              -p {{ .Values.keycloak.postgresql.service.port }} \
              -U {{ .Values.keycloak.keycloak.persistence.dbUser }} {{ .Values.keycloak.keycloak.persistence.dbName }} > /backup/backup.dump
          volumeMounts:
          - name: data
            mountPath: "/backup"
            subPath: "{{ .Values.keycloak.postgresql.persistence.subPath }}-backup"
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: aims-pgbackup-volume

---

apiVersion: batch/v1
kind: Job
metadata:
  name: upg-dbcleanup-{{ template "alfresco-identity.fullname" . }}
  labels:
    heritage: {{.Release.Service | quote }}
    release: {{.Release.Name | quote }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
  annotations:
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
    "helm.sh/hook": pre-upgrade #Determines time of deploy
    "helm.sh/hook-weight": "2" #Determines the order if multiple hooks are deffined
    "helm.sh/hook-delete-policy": hook-succeeded #Determines when is the object deleted
spec:
  template:
    metadata:
      name: upg-dbcleanup-{{ template "alfresco-identity.fullname" . }}
      labels:
        heritage: {{.Release.Service | quote }}
        release: {{.Release.Name | quote }}
        chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    spec:
      restartPolicy: "OnFailure"
      containers:
        - name: upg-dbcleanup
          image: "{{ .Values.hyperkube.image.repository }}:{{ .Values.hyperkube.image.tag }}"
          imagePullPolicy: "{{ .Values.hyperkube.image.pullPolicy }}"
          command:
            - bash
            - -c
            - |
              kubectl delete --ingnore-not-found deployment {{ .Release.Name }}-{{ .Values.keycloak.postgresql.nameOverride }}
              sleep 3

---

apiVersion: batch/v1
kind: Job
metadata:
  name: stopkc-job-{{ template "alfresco-identity.fullname" . }}
  labels:
    heritage: {{.Release.Service | quote }}
    release: {{.Release.Name | quote }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
  annotations:
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
    "helm.sh/hook": post-upgrade,post-install #Determines time of deploy
    "helm.sh/hook-weight": "1" #Determines the order if multiple hooks are deffined
    "helm.sh/hook-delete-policy": hook-succeeded #Determines when is the object deleted
spec:
  template:
    metadata:
      name: stopkc-job-{{ template "alfresco-identity.fullname" . }}
      labels:
        heritage: {{.Release.Service | quote }}
        release: {{.Release.Name | quote }}
        chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    spec:
      restartPolicy: "OnFailure"
      containers:
        - name: stopkc-job
          image: "{{ .Values.hyperkube.image.repository }}:{{ .Values.hyperkube.image.tag }}"
          imagePullPolicy: "{{ .Values.hyperkube.image.pullPolicy }}"
          command:
            - bash
            - -c
            - |
              kubectl get sts
              kubectl patch sts {{ template "keycloak.fullname" . }} --patch '{"spec": {"replicas":0}}'

---

apiVersion: batch/v1
kind: Job
metadata:
  name: restore-job-{{ template "alfresco-identity.fullname" . }}
  labels:
    heritage: {{.Release.Service | quote }}
    release: {{.Release.Name | quote }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
  annotations:
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
    "helm.sh/hook": post-upgrade #Determines time of deploy
    "helm.sh/hook-weight": "2" #Determines the order if multiple hooks are deffined
    "helm.sh/hook-delete-policy": hook-succeeded #Determines when is the object deleted
spec:
  template:
    metadata:
      name: restore-job-{{ template "alfresco-identity.fullname" . }}
      labels:
        heritage: {{.Release.Service | quote }}
        release: {{.Release.Name | quote }}
        chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    spec:
      restartPolicy: "OnFailure"
      containers:
        - name: restore-job
          image: "postgres:11.1"
          imagePullPolicy: "IfNotPresent"
          env:
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-{{ .Values.keycloak.postgresql.nameOverride }}
                  key: postgresql-password
          command: ["bash","-c","pg_restore -c -h {{ .Release.Name }}-{{ .Values.keycloak.postgresql.nameOverride }} -p {{ .Values.keycloak.postgresql.service.port }} -U {{ .Values.keycloak.keycloak.persistence.dbUser }} /backup/backup.dump"]
          volumeMounts:
          - name: data
            mountPath: "/backup"
            subPath: "{{ .Values.keycloak.postgresql.persistence.subPath }}-backup"
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: aims-pgbackup-volume

---

apiVersion: batch/v1
kind: Job
metadata:
  name: startkc-job-{{ template "alfresco-identity.fullname" . }}
  labels:
    heritage: {{.Release.Service | quote }}
    release: {{.Release.Name | quote }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
  annotations:
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
    "helm.sh/hook": post-upgrade,post-install #Determines time of deploy
    "helm.sh/hook-weight": "3" #Determines the order if multiple hooks are deffined
    "helm.sh/hook-delete-policy": hook-succeeded #Determines when is the object deleted
spec:
  template:
    metadata:
      name: startkc-job-{{ template "alfresco-identity.fullname" . }}
      labels:
        heritage: {{.Release.Service | quote }}
        release: {{.Release.Name | quote }}
        chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    spec:
      restartPolicy: "OnFailure"
      containers:
        - name: startkc-job
          image: "{{ .Values.hyperkube.image.repository }}:{{ .Values.hyperkube.image.tag }}"
          imagePullPolicy: "{{ .Values.hyperkube.image.pullPolicy }}"
          command:
            - bash
            - -c
            - |
              kubectl get sts
              kubectl patch sts {{ template "keycloak.fullname" . }} --patch '{"spec": {"replicas":1}}'
